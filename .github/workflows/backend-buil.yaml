name: Build and Push Docker Image Backend

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
    paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        working-directory: ./backend
        run: |
          python -m pip install -r requirements.txt
          python -m pip install pytest

      - name: Run Pytest
        working-directory: ./backend
        run: |
          pytest test_main.py


      # âœ… Verifica si hubo cambios en backend/
      - name: Check if backend changed
        id: backend-check
        run: |
          if ! git diff --name-only HEAD~1 HEAD | grep -q '^backend/'; then
            echo "No backend changes detected. Skipping build."
            echo "skip=true" >> $GITHUB_ENV
          fi

      - name: Stop if no backend changes
        if: env.skip == 'true'
        run: exit 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image tags
        id: vars
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=${REPO_LOWER}" >> $GITHUB_ENV

          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build Docker image (Backend)
        run: |
          docker build -t ghcr.io/${{ env.REPO_NAME }}-back:${{ env.TAG }} ./backend

      - name: Push Docker image (Backend)
        run: |
          docker push ghcr.io/${{ env.REPO_NAME }}-back:${{ env.TAG }}
